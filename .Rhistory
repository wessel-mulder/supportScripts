git remote add origin https://github.com/wessel-mulder/supportScripts.git
git remote add origin https://github.com/wessel-mulder/supportScripts.git
devtools::document
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
library(supportScripts)
devtools::document()
# GETTING STARTED ---------------------------------------------------------
# my utils
devtools::install_github('wessel-mulder/supportScripts')
devtools::document()
# GETTING STARTED ---------------------------------------------------------
# my utils
devtools::install_github('wessel-mulder/supportScripts')
devtools::document()
devtools::document()
# GETTING STARTED ---------------------------------------------------------
# my utils
devtools::install_github('wessel-mulder/supportScripts')
library(supportScripts)
# load packages
pkgs <- c('terra','stringr')
loadInstall(pkgs)
# check unused packages
unusedPackages(pkgs)
# Rscript
args <- commandArgs(trailingOnly = FALSE)
path <- sub("^--file=", "", args[grep("^--file=", args)])
if (length(path)) return(normalizePath(path))
return(normalizePath(path))
# Rscript
args <- commandArgs(trailingOnly = FALSE)
path <- sub("^--file=", "", args[grep("^--file=", args)])
# Rscript
args <- commandArgs(trailingOnly = FALSE)
path <- sub("^--file=", "", args[grep("^--file=", args)])
if (length(path)) return(normalizePath(path))
# source()
for (i in sys.frames()) {
if (!is.null(attr(i, "ofile"))) return(normalizePath(attr(i, "ofile")))
}
# RStudio
if (rstudioapi::isAvailable()) {
ctx <- rstudioapi::getActiveDocumentContext()
if (nzchar(ctx$path)) return(ctx$path)
}
test <- currentScripts()
currentScripts <- function() {
# Rscript
args <- commandArgs(trailingOnly = FALSE)
path <- sub("^--file=", "", args[grep("^--file=", args)])
if (length(path)) return(normalizePath(path))
# source()
for (i in sys.frames()) {
if (!is.null(attr(i, "ofile"))) return(normalizePath(attr(i, "ofile")))
}
# RStudio
if (rstudioapi::isAvailable()) {
ctx <- rstudioapi::getActiveDocumentContext()
if (nzchar(ctx$path)) return(ctx$path)
}
# If all fail
stop("Unable to determine the current script path.")
}
test <- currentScripts()
currentScript <- function() {
# Rscript
args <- commandArgs(trailingOnly = FALSE)
path <- sub("^--file=", "", args[grep("^--file=", args)])
if (length(path)) return(normalizePath(path))
# source()
for (i in sys.frames()) {
if (!is.null(attr(i, "ofile"))) return(normalizePath(attr(i, "ofile")))
}
# RStudio
if (rstudioapi::isAvailable()) {
ctx <- rstudioapi::getActiveDocumentContext()
if (nzchar(ctx$path)) return(ctx$path)
}
# If all fail
stop("Unable to determine the current script path.")
}
unusedPackages <- function(pkgs){
loadInstall(pkgs)
file_path <- currentScript()
funs <- funspotr::spot_funs(file_path)
diff <- setdiff(pkgs, unique(funs$pkgs))
if (length(diff) == 0) {
message("✅ No unused packages.")
return(invisible(NULL))
} else {
message(paste0("⚠️ ", length(diff), " unused package(s):"))
return(diff)
}
}
